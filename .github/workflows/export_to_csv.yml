name: Export catalogs to CSV

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  export-to-csv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest wheel numpy
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install gdal-bin python3-gdal
          sudo apt-get install libgdal-dev
          pip install GDAL==$(gdal-config --version) --global-option=build_ext --global-option="-I/usr/include/gdal"
          sudo apt-get install libspatialindex-dev
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Export the catalog of sources as CSV
        run: python3 scripts/export_to_csv.py

      - name: Upload the catalog of sources CSV artifact
        uses: actions/upload-artifact@v1
        with:
          name: sources.csv
          path: sources.csv
# Temporarily commented. Uncomment before merging.
#  store-csv:
#    needs: [ export-to-csv ]
#    runs-on: ubuntu-latest
#    # Don't upload to Google Cloud if it was triggered by hand.
#    # In that case the resulting sources.csv can be found in the build artifacts.
#    if: ${{ github.event_name != 'workflow_dispatch' }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Download the catalog of sources CSV artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: sources.csv
#          path: sources.csv
#      - name: Set up and authorize Cloud
#        uses: google-github-actions/auth@v0
#        with:
#          credentials_json: ${{ secrets.ARCHIVE_DATASET_SA_KEY }}
#      - name: Upload csv to Google Cloud Storage
#        id: upload-csv
#        uses: google-github-actions/upload-cloud-storage@v0
#        with:
#          path: sources.csv
#          destination: mdb-csv
#          parent: false